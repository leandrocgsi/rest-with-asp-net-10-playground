name: Integration Tests

on:
  push:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      docker:
        image: docker:20.10-dind
        options: --privileged
        env:
          DOCKER_TLS_CERTDIR: "" # Disable TLS for simplicity

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET 10
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "10.0.x"

      - name: Create Docker network
        run: docker network create test-network || true

      - name: Start SQL Server container
        run: |
          docker run -d --name sqlserver --network test-network \
            -e "ACCEPT_EULA=Y" \
            -e "SA_PASSWORD=@Your_password123!" \
            -p 1433:1433 \
            mcr.microsoft.com/mssql/server:2022-latest
          # Wait for SQL Server to be ready (up to 60 seconds)
          for i in {1..60}; do
            if docker run --rm --network test-network mcr.microsoft.com/mssql-tools \
              /opt/mssql-tools18/bin/sqlcmd -S sqlserver -U SA -P "@Your_password123!" -Q "SELECT 1" > /dev/null 2>&1; then
              echo "SQL Server is ready"
              break
            fi
            echo "Waiting for SQL Server to start ($i/60)..."
            sleep 1
          done

      - name: Debug Docker environment
        run: |
          docker ps
          docker network ls
          docker network inspect test-network || true
          docker run --rm --network test-network mcr.microsoft.com/mssql-tools \
            /opt/mssql-tools18/bin/sqlcmd -S sqlserver -U SA -P "@Your_password123!" -Q "SELECT @@VERSION" || true
        if: always()

      - name: Restore dependencies
        run: dotnet restore
        working-directory: 19_IntroToIntegrationTests/RestWithASPNET10Erudio

      - name: Build
        run: dotnet build --configuration Release --no-restore
        working-directory: 19_IntroToIntegrationTests/RestWithASPNET10Erudio

      - name: Run tests
        run: dotnet test --configuration Release --no-build --logger "trx;LogFileName=test_results.trx" --blame-hang-timeout 3m
        working-directory: 19_IntroToIntegrationTests/RestWithASPNET10Erudio
        env:
          SQL_SERVER_CONNECTION_STRING: "Server=sqlserver,1433;Database=TestDb;User Id=SA;Password=@Your_password123!;TrustServerCertificate=True"
          ASPNETCORE_ENVIRONMENT: Test

      - name: Capture SQL Server logs
        run: docker logs sqlserver || true
        if: failure()