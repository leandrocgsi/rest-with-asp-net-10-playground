name: Test SQL Server Container

on:
  push:
    branches: [main]

jobs:
  test-sql-container:
    runs-on: ubuntu-latest

    steps:
      - name: Test SQL Server Container
        run: |
          # Iniciar o contêiner SQL Server
          docker run -d --name sqlserver_test \
            -e "ACCEPT_EULA=Y" \
            -e "SA_PASSWORD=@Admin123" \
            -p 1433:1433 \
            mcr.microsoft.com/mssql/server:2022-latest
          
          # Esperar até que o SQL Server esteja pronto (máximo 90 segundos)
          timeout 90s bash -c "until docker exec sqlserver_test /opt/mssql-tools18/bin/sqlcmd -S localhost -U SA -P '@Admin123' -Q 'SELECT 1' -C; do sleep 5; done"
          
          # Verificar se o comando sqlcmd foi bem-sucedido
          if [ $? -eq 0 ]; then
            echo "SQL Server container is ready and accessible."
          else
            echo "Failed to connect to SQL Server container."
            docker logs sqlserver_test
            exit 1
          fi
          
          # Parar e remover o contêiner
          # docker stop sqlserver_test
          # docker rm sqlserver_test
        env:
          SQL_SERVER_TEST_PORT: "1433"
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET 10
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "10.0.x"

      - name: Restore dependencies
        run: dotnet restore
        working-directory: 19_IntroToIntegrationTests/RestWithASPNET10Erudio

      - name: Build
        run: dotnet build --configuration Release --no-restore
        working-directory: 19_IntroToIntegrationTests/RestWithASPNET10Erudio

      - name: Run tests
        run: dotnet test --configuration Release --no-build --logger "trx;LogFileName=test_results.trx"
        working-directory: 19_IntroToIntegrationTests/RestWithASPNET10Erudio