name: Integration Tests

on:
  push:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      docker:
        image: docker:20.10-dind
        options: --privileged --network test-network
        env:
          DOCKER_TLS_CERTDIR: "" # Disable TLS for simplicity

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET 10
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "10.0.x"

      - name: Verify Docker
        run: docker info

      - name: Create Docker network
        run: docker network create test-network || true

      - name: Pre-pull SQL Server & Ryuk images
        run: |
          docker pull mcr.microsoft.com/mssql/server:2022-latest
          docker pull testcontainers/ryuk:0.12.0

      - name: Debug Docker environment
        run: |
          docker ps
          docker network ls
          docker network inspect test-network || true
        if: always()

      - name: Restore dependencies
        run: dotnet restore
        working-directory: 19_IntroToIntegrationTests/RestWithASPNET10Erudio

      - name: Build
        run: dotnet build --configuration Release --no-restore
        working-directory: 19_IntroToIntegrationTests/RestWithASPNET10Erudio

      - name: Run tests
        run: dotnet test --configuration Release --no-build --logger "trx;LogFileName=test_results.trx" --blame-hang-timeout 3m
        working-directory: 19_IntroToIntegrationTests/RestWithASPNET10Erudio
        env:
          TESTCONTAINERS_HOST_OVERRIDE: docker
          TESTCONTAINERS_DOCKER_SOCKET_OVERRIDE: /var/run/docker.sock
          DOCKER_HOST: tcp://docker:2375

      - name: Capture SQL Server logs
        run: docker logs $(docker ps -q --filter "ancestor=mcr.microsoft.com/mssql/server:2022-latest") || true
        if: failure()